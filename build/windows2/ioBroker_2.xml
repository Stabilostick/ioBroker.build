<project>
    <shortName>ioBroker</shortName>
    <fullName>ioBroker</fullName>
    <version>2.0</version>
    <debugLevel>0</debugLevel>
    <licenseFile>licenses/en.txt</licenseFile>
    <leftImage>pics/ioBrokerSkyLightBlue.png</leftImage>
    <logoImage>pics/ioBrokerLogo48.png</logoImage>
    <splashImage>pics/ioBroker_logo_lang.png</splashImage>
    <wmImage>pics/ioBrokerLogo48.png</wmImage>
    <componentList>
        <component>
            <name>debugcomponent</name>
            <description>Debug Component</description>
            <canBeEdited>0</canBeEdited>
            <selected>1</selected>
            <show>0</show>
            <folderList>
                <folder>
                    <description>system_temp_folder</description>
                    <destination>${system_temp_folder}\\iobinst</destination>
                    <name>system_temp_folder</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>files/curl/curl.exe</origin>
                        </distributionFile>
                    </distributionFileList>
                    <ruleList>
                        <isTrue>
                            <value>0</value>
                        </isTrue>
                    </ruleList>
                </folder>
            </folderList>
            <initializationActionList>
                <setInstallerVariable>
                    <name>debugURL</name>
                    <value>${debugURLini}</value>
                </setInstallerVariable>
                <createDirectory>
                    <path>${system_temp_directory}\iobinst</path>
                </createDirectory>
                <createTimeStamp>
                    <format>%Y%m%d-%H%M%S</format>
                    <variable>start</variable>
                </createTimeStamp>
                <registryGet>
                    <key>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Cryptography</key>
                    <name>MachineGuid</name>
                    <variable>uuid</variable>
                </registryGet>

                <!-- Unpack the bundled curl.exe first -->
                <unpackFile>
                    <addToUninstaller>0</addToUninstaller>
                    <component>debugcomponent</component>
                    <destination>${system_temp_directory}\iobinst</destination>
                    <folder>system_temp_folder</folder>
                    <origin>curl.exe</origin>
                    <showMessageOnError>0</showMessageOnError>
                </unpackFile>
            </initializationActionList>
            <installationAbortedActionList>
                <readFile>
                    <abortOnError>0</abortOnError>
                    <name>installLog</name>
                    <path>${installer_installation_log}</path>
                    <showMessageOnError>0</showMessageOnError>
                </readFile>
                <urlEncode>
                    <text>${installLog}</text>
                    <variable>log</variable>
                </urlEncode>
                <createTimeStamp>
                    <abortOnError>0</abortOnError>
                    <format>%Y%m%d-%H%M%S</format>
                    <showMessageOnError>0</showMessageOnError>
                    <variable>aborted</variable>
                </createTimeStamp>
                <setInstallerVariable>
                    <abortOnError>0</abortOnError>
                    <name>debuginfo</name>
                    <showMessageOnError>0</showMessageOnError>
                    <value>{\"start\":\"${start}\",\"end\":\"${aborted}\",\"uuid\":\"${uuid}\",\"status\":\"aborted\",\"log\":\"${log}\"}</value>
                </setInstallerVariable>
                <runProgram>
                    <abortOnError>0</abortOnError>
                    <program>${system_temp_directory}\iobinst\curl.exe</program>
                    <programArguments>--header "Content-Type: application/json" --max-time 3 -k --silent --show-error --request POST --data "${debuginfo}" ${debugURL}</programArguments>
                    <progressText>Checking debug info...</progressText>
                    <show>0</show>
                    <showMessageOnError>0</showMessageOnError>
                    <workingDirectory>${system_temp_directory}\iobinst</workingDirectory>
                </runProgram>
            </installationAbortedActionList>
            <preInstallationActionList>
                <actionGroup>
                    <actionList>
                        <setInstallerVariable>
                            <abortOnError>0</abortOnError>
                            <name>debuginfo</name>
                            <show>0</show>
                            <showMessageOnError>0</showMessageOnError>
                            <value>{\"start\":\"${start}\",\"uuid\":\"${uuid}\",\"version\":\"${project.versionId}\",\"status\":\"started\"}</value>
                        </setInstallerVariable>
                        <runProgram>
                            <abortOnError>0</abortOnError>
                            <program>${system_temp_directory}\iobinst\curl.exe</program>
                            <programArguments>--header "Content-Type: application/json" --max-time 3 -k --silent --show-error --request POST --data "${debuginfo}" ${debugURL}</programArguments>
                            <progressText>Checking debug info...</progressText>
                            <show>0</show>
                            <showMessageOnError>0</showMessageOnError>
                            <workingDirectory>${system_temp_directory}\iobinst</workingDirectory>
                        </runProgram>
                    </actionList>
                </actionGroup>
            </preInstallationActionList>
        </component>
        <component>
            <name>updatecomponent</name>
            <description>Update Component</description>
            <canBeEdited>0</canBeEdited>
            <selected>1</selected>
            <show>0</show>
            <folderList>
                <folder>
                    <description>system_temp_folder</description>
                    <destination>${system_temp_directory}\iobinst</destination>
                    <name>system_temp_folder</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>autoupdate/autoupdate-windows.exe</origin>
                        </distributionFile>
                    </distributionFileList>
                    <ruleList>
                        <isTrue>
                            <value>0</value>
                        </isTrue>
                    </ruleList>
                </folder>
            </folderList>
            <parameterList>
                <booleanParameter>
                    <name>checkForUpdate</name>
                    <description></description>
                    <explanation></explanation>
                    <value></value>
                    <default>Yes</default>
                    <cliOptionText>Check online for updated setup program. If found, download new setup and start it.</cliOptionText>
                    <ruleList>
                        <isTrue>
                            <value>0</value>
                        </isTrue>
                    </ruleList>
                </booleanParameter>
            </parameterList>
            <preInstallationActionList>
                <actionGroup>
                    <explanation>Check for updates</explanation>
                    <actionList>
                        <showProgressDialog>
                            <title></title>
                            <actionList>
                                <!-- Unpack the bundled autoupdate and update.ini to some folder first -->
                                <unpackFile>
                                    <addToUninstaller>0</addToUninstaller>
                                    <component>updatecomponent</component>
                                    <destination>${system_temp_directory}\iobinst</destination>
                                    <folder>system_temp_folder</folder>
                                    <origin>autoupdate-windows.exe</origin>
                                    <progressText>Unpacking '${system_temp_directory}\iobinst\autoupdate-windows.exe'</progressText>
                                </unpackFile>
                                <writeFile>
                                    <path>${system_temp_directory}\iobinst\update.ini</path>
                                    <progressText>Writing '${system_temp_directory}\iobinst\update.ini'</progressText>
                                    <text>[Update]
url = http://iobroker.live/images/win/update.xml
version_id = ${project.versionId}
check_for_updates = 1
update_download_location = ${system_temp_directory}\iobinst</text>
                                </writeFile>
                                <logMessage>
                                    <text>...this is installer version ${project.versionId}</text>
                                </logMessage>
                                <runProgram progressText="Checking for updates...">
                                    <abortOnError>0</abortOnError>
                                    <program>${system_temp_directory}\iobinst\autoupdate-windows.exe</program>
                                    <programArguments>--mode unattended</programArguments>
                                    <showMessageOnError>0</showMessageOnError>
                                    <useMSDOSPath>0</useMSDOSPath>
                                    <workingDirectory>${system_temp_directory}\iobinst</workingDirectory>
                                </runProgram>
                                <logMessage>
                                    <text>Update Component - Pre-installation Action - Check result: ${program_exit_code}</text>
                                </logMessage>
                            </actionList>
                        </showProgressDialog>
                        <showQuestion>
                            <default>yes</default>
                            <text>An update for the ioBroker setup program is available! 
Do you like to update?</text>
                            <variable>doUpdate</variable>
                            <ruleList>
                                <compareText logic="equals" text="${program_exit_code}" value="0"/>
                            </ruleList>
                        </showQuestion>
                        <showInfo text="Sorry, no update found...">
                            <run>0</run>
                            <show>0</show>
                            <ruleList>
                                <compareText logic="equals" text="${program_exit_code}" value="1"/>
                            </ruleList>
                        </showInfo>
                        <showWarning text="Error checking for updates. Error connecting to remote server or invalid XML file.">
                            <ruleList>
                                <compareText logic="equals" text="${program_exit_code}" value="2"/>
                            </ruleList>
                        </showWarning>
                        <showWarning text="Error checking for updates. Update check disabled through check_for_updates setting.">
                            <ruleList>
                                <compareText logic="equals" text="${program_exit_code}" value="5"/>
                            </ruleList>
                        </showWarning>
                        <logMessage>
                            <text>...finished update check</text>
                        </logMessage>
                        <actionGroup>
                            <explanation>DoUpdate</explanation>
                            <actionList>
                                <logMessage>
                                    <text>Update Component - Pre-installation Action - Do updated started</text>
                                </logMessage>
                                <setInstallerVariable>
                                    <name>debuginfo</name>
                                    <value>{\"start\":\"${start}\",\"uuid\":\"${uuid}\",\"version\":\"${project.versionId}\",\"status\":\"doupdate\"}</value>
                                </setInstallerVariable>
                                <runProgram>
                                    <abortOnError>0</abortOnError>
                                    <program>${system_temp_directory}\iobinst\curl.exe</program>
                                    <programArguments>--header "Content-Type: application/json" --max-time 3 -k --silent --show-error --request POST --data "${debuginfo}" ${debugURL}</programArguments>
                                    <progressText>Checking debug info...</progressText>
                                    <show>0</show>
                                    <showMessageOnError>0</showMessageOnError>
                                    <workingDirectory>${system_temp_directory}\iobinst</workingDirectory>
                                </runProgram>
                                <runProgram progressText="Downloading the update...">
                                    <abortOnError>0</abortOnError>
                                    <program>${system_temp_directory}\iobinst\autoupdate-windows.exe</program>
                                    <programArguments>--mode unattended --unattendedmodebehavior download --unattendedmodeui minimalWithDialogs &amp;</programArguments>
                                    <showMessageOnError>0</showMessageOnError>
                                    <useMSDOSPath>0</useMSDOSPath>
                                    <workingDirectory>${system_temp_directory}\iobinst</workingDirectory>
                                </runProgram>
                                <exit/>
                            </actionList>
                            <ruleList>
                                <isTrue>
                                    <value>${doUpdate}</value>
                                </isTrue>
                            </ruleList>
                        </actionGroup>
                    </actionList>
                    <ruleList>
                        <isTrue>
                            <value>${checkForUpdate}</value>
                        </isTrue>
                    </ruleList>
                </actionGroup>
            </preInstallationActionList>
        </component>
        <component>
            <name>initcomponent</name>
            <description>Init Component</description>
            <canBeEdited>0</canBeEdited>
            <selected>1</selected>
            <show>0</show>
            <preInstallationActionList>
                <actionGroup>
                    <progressText>Checking OS version</progressText>
                    <actionList>
                        <logMessage>
                            <text>Checking OS version...</text>
                        </logMessage>
                        <queryWMI>
                            <class>Win32_OperatingSystem</class>
                            <fields>Version</fields>
                            <variable>init_os_version</variable>
                            <where></where>
                        </queryWMI>
                        <logMessage>
                            <text>...OS version is ${init_os_version}</text>
                        </logMessage>
                        <actionGroup>
                            <progressText>OS version check result</progressText>
                            <actionList>
                                <logMessage>
                                    <text>OS version is less than 6.1.7601. Exiting.</text>
                                </logMessage>
                                <throwError>
                                    <text>This operating system version is not supported. Version must be at least Windows 7, Server 2008 R2 or newer.</text>
                                </throwError>
                            </actionList>
                            <ruleList>
                                <compareVersions>
                                    <logic>greater_or_equal</logic>
                                    <negate>1</negate>
                                    <version1>${init_os_version}</version1>
                                    <version2>6.1.7601</version2>
                                </compareVersions>
                            </ruleList>
                        </actionGroup>
                    </actionList>
                </actionGroup>
                <actionGroup>
                    <progressText>Checking antivirus</progressText>
                    <actionList>
                        <logMessage>
                            <text>Checking antivirus...</text>
                        </logMessage>
                        <if>
                            <actionList>
                                <logMessage>
                                    <text>...Warning. 3rd-party antivirus program found.</text>
                                </logMessage>
                                <showQuestion>
                                    <default>yes</default>
                                    <text>3rd-party antivirus program found. There are known problems with 3rd-party antivirus programs like endless loops or other installer malfunctions. Please disable 3rd-party antivirus program temporarily.

Choose "Yes" to quit the installation now or "No" to ignore this warning.</text>
                                    <variable>antivirusExit</variable>
                                </showQuestion>
                                <actionGroup>
                                    <actionList>
                                        <logMessage>
                                            <text>...3rd-party antivirus program found. User decided to exit.</text>
                                        </logMessage>
                                        <exit/>
                                    </actionList>
                                    <ruleList>
                                        <isTrue>
                                            <value>${antivirusExit}</value>
                                        </isTrue>
                                    </ruleList>
                                </actionGroup>
                            </actionList>
                            <elseActionList>
                                <logMessage>
                                    <text>...3rd-party antivirus program not found. This ist good.</text>
                                </logMessage>
                            </elseActionList>
                            <ruleList>
                                <antivirusTest>
                                    <type>enabled</type>
                                </antivirusTest>
                                <antivirusTest>
                                    <product>windows_defender</product>
                                    <type>disabled</type>
                                </antivirusTest>
                            </ruleList>
                        </if>
                    </actionList>
                </actionGroup>
                <actionGroup>
                    <progressText>Checking msiexec</progressText>
                    <actionList>
                        <logMessage>
                            <text>Checking msiexec...</text>
                        </logMessage>
                        <setInstallerVariable>
                            <name>msiexec</name>
                            <value></value>
                        </setInstallerVariable>
                        <setInstallerVariable name="msiexec" persist="1" value="msiexec.exe">
                            <ruleList>
                                <programTest condition="is_in_path" name="msiexec.exe"/>
                            </ruleList>
                        </setInstallerVariable>
                        <setInstallerVariable name="msiexec" value="${windows_dir}\system32\msiexec.exe">
                            <ruleList>
                                <fileTest condition="exists" path="${windows_dir}\system32\msiexec.exe"/>
                            </ruleList>
                        </setInstallerVariable>
                        <if>
                            <actionList>
                                <getWindowsFileVersionInfo path="${msiexec}" type="version" variable="msi_version"/>
                                <setInstallerVariableFromRegEx name="msi_version" pattern="(^[0-9]+)\.([0-9]+)\..*" substitution="\1.\2" text="${msi_version}"/>
                                <logMessage>
                                    <text>...msiexec.exe version found: ${msi_version}</text>
                                </logMessage>
                                <throwError>
                                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                                    <text>You need at least Windows Installer MSI version 5.0 to run this program. Exiting.</text>
                                    <ruleList>
                                        <compareValues logic="less" value1="${msi_version}" value2="5.0"/>
                                    </ruleList>
                                </throwError>
                            </actionList>
                            <conditionRuleList>
                                <compareText logic="does_not_equal" text="${msiexec}" value=""/>
                            </conditionRuleList>
                            <elseActionList>
                                <logMessage>
                                    <text>...msiexec not found in system path. Exiting.</text>
                                </logMessage>
                                <throwError>
                                    <text>msiexec not found in system path. Exiting.</text>
                                </throwError>
                            </elseActionList>
                        </if>
                    </actionList>
                </actionGroup>
            </preInstallationActionList>
        </component>
        <component>
            <name>setupcomponent</name>
            <description>Setup Component</description>
            <canBeEdited>0</canBeEdited>
            <selected>1</selected>
            <show>0</show>
        </component>
        <componentGroup>
            <name>globalcomponent</name>
            <description>Global Component Group</description>
            <canBeEdited>0</canBeEdited>
            <selected>1</selected>
            <show>0</show>
            <componentList>
                <component>
                    <name>dotNet</name>
                    <description>Microsoft .NET (download, approx. 112MB)</description>
                    <canBeEdited>1</canBeEdited>
                    <detailedDescription>Microsoft Visual Studio 2017 Installer requires Microsoft .NET Framework version 4.5.1 or newer to run.</detailedDescription>
                    <requiredSize>80000</requiredSize>
                    <selected>1</selected>
                    <show>1</show>
                    <folderList>
                        <folder>
                            <description>dotNet</description>
                            <destination>${installdir}\setup</destination>
                            <name>dotNet</name>
                            <platforms>windows</platforms>
                            <actionList>
                                <showProgressDialog>
                                    <explanation>${msg(Component.dotNet.detailedDescription)}</explanation>
                                    <title>${msg(Component.progress.download.title)}</title>
                                    <actionList>
                                        <httpGet>
                                            <abortOnError>0</abortOnError>
                                            <filename>${system_temp_directory}\iobinst\ndp48-x86-x64-allos-enu.exe</filename>
                                            <showMessageOnError>0</showMessageOnError>
                                            <url>https://go.microsoft.com/fwlink/?linkid=2088631</url>
                                            <onErrorActionList>
                                                <throwError>
                                                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                                                    <text>${msg(Component.dotNet.download.error)}</text>
                                                </throwError>
                                            </onErrorActionList>
                                        </httpGet>
                                    </actionList>
                                </showProgressDialog>
                            </actionList>
                        </folder>
                    </folderList>
                    <postInstallationActionList>
                        <showProgressDialog>
                            <explanation>${msg(Component.dotNet.explanation)}</explanation>
                            <progressText>${msg(Component.dotNet.explanation)}</progressText>
                            <title>${msg(Component.installation.title)}</title>
                            <actionList>
                                <runProgram>
                                    <abortOnError>0</abortOnError>
                                    <program>${installdir}\setup\ndp48-x86-x64-allos-enu.exe</program>
                                    <programArguments>/q /norestart</programArguments>
                                    <progressText>${msg(Component.dotNet.explanation)}</progressText>
                                    <showMessageOnError>0</showMessageOnError>
                                    <useMSDOSPath>0</useMSDOSPath>
                                    <onErrorActionList>
                                        <if>
                                            <actionList>
                                                <setInstallerVariable>
                                                    <name>project.rebootRequired</name>
                                                    <value>true</value>
                                                </setInstallerVariable>
                                            </actionList>
                                            <conditionRuleList>
                                                <compareValues>
                                                    <logic>equals</logic>
                                                    <value1>${program_exit_code}</value1>
                                                    <value2>3010</value2>
                                                </compareValues>
                                            </conditionRuleList>
                                            <elseActionList>
                                                <throwError>
                                                    <text>${msg(Component.dotNet.install.error)}</text>
                                                </throwError>
                                            </elseActionList>
                                        </if>
                                    </onErrorActionList>
                                </runProgram>
                                <if>
                                    <explanation>1</explanation>
                                    <progressText>2</progressText>
                                </if>
                            </actionList>
                        </showProgressDialog>
                    </postInstallationActionList>
                    <preInstallationActionList>
                        <actionGroup>
                            <explanation>dotNet check</explanation>
                            <actionList>
                                <logMessage>
                                    <text>Checking Microsoft dotNet version...</text>
                                </logMessage>
                                <setInstallerVariable>
                                    <name>dotNETversion</name>
                                    <value>0</value>
                                </setInstallerVariable>
                                <if>
                                    <actionList>
                                        <registryGet>
                                            <key>HKLM\SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full</key>
                                            <name>Release</name>
                                            <variable>dotNETversion</variable>
                                        </registryGet>
                                    </actionList>
                                    <conditionRuleList>
                                        <registryTest>
                                            <key>HKLM\SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full</key>
                                            <logic>exists</logic>
                                            <name>Release</name>
                                            <type>REG_DWORD</type>
                                        </registryTest>
                                    </conditionRuleList>
                                </if>
                                <if>
                                    <actionList>
                                        <logMessage>
                                            <text>...found Microsoft dotNet release: ${dotNETversion}. Minimum version is 379893.</text>
                                        </logMessage>
                                        <componentSelection>
                                            <deselect></deselect>
                                            <select>dotNet</select>
                                        </componentSelection>
                                    </actionList>
                                    <conditionRuleList>
                                        <compareValues>
                                            <logic>less</logic>
                                            <value1>${dotNETversion}</value1>
                                            <value2>379893</value2>
                                        </compareValues>
                                    </conditionRuleList>
                                    <elseActionList>
                                        <logMessage>
                                            <text>...found Microsoft dotNet release: ${dotNETversion}. Nothing to do.</text>
                                        </logMessage>
                                        <componentSelection>
                                            <deselect>dotNet</deselect>
                                            <select></select>
                                        </componentSelection>
                                    </elseActionList>
                                </if>
                            </actionList>
                        </actionGroup>
                    </preInstallationActionList>
                </component>
                <component>
                    <name>Git</name>
                    <description>Git (download, approx. 46MB)</description>
                    <canBeEdited>1</canBeEdited>
                    <detailedDescription>Git is used by npm to download additional resources</detailedDescription>
                    <requiredSize>510000</requiredSize>
                    <selected>1</selected>
                    <show>1</show>
                    <folderList>
                        <folder>
                            <description>Git</description>
                            <destination>${system_temp_directory}\iobinst</destination>
                            <name>Git</name>
                            <platforms>windows</platforms>
                            <actionList>
                                <showProgressDialog>
                                    <explanation>${msg(Component.Git.detailedDescription)}</explanation>
                                    <title>${msg(Component.download.title)}</title>
                                    <actionList>
                                        <httpGet>
                                            <abortOnError>0</abortOnError>
                                            <filename>${system_temp_directory}\iobinst\Git.exe</filename>
                                            <showMessageOnError>0</showMessageOnError>
                                            <url>https://github.com/git-for-windows/git/releases/download/v2.25.0.windows.1/Git-2.25.0-32-bit.exe</url>
                                            <onErrorActionList>
                                                <throwError>
                                                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                                                    <text>${msg(Component.Git.download.error32)}</text>
                                                </throwError>
                                            </onErrorActionList>
                                        </httpGet>
                                    </actionList>
                                    <ruleList>
                                        <platformTest>
                                            <type>windows-x86</type>
                                        </platformTest>
                                    </ruleList>
                                </showProgressDialog>
                                <showProgressDialog>
                                    <explanation>${msg(Component.Git.detailedDescription)}</explanation>
                                    <title>${msg(Component.download.title)}</title>
                                    <actionList>
                                        <httpGet>
                                            <abortOnError>0</abortOnError>
                                            <filename>${system_temp_directory}\iobinst\Git.exe</filename>
                                            <showMessageOnError>0</showMessageOnError>
                                            <url>https://github.com/git-for-windows/git/releases/download/v2.25.0.windows.1/Git-2.25.0-64-bit.exe</url>
                                            <onErrorActionList>
                                                <throwError>
                                                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                                                    <text>${msg(Component.Git.download.error64)}</text>
                                                </throwError>
                                            </onErrorActionList>
                                        </httpGet>
                                    </actionList>
                                    <ruleList>
                                        <platformTest>
                                            <type>windows-x64</type>
                                        </platformTest>
                                    </ruleList>
                                </showProgressDialog>
                            </actionList>
                        </folder>
                    </folderList>
                    <initializationActionList>
                        <setInstallerVariable>
                            <name>gittargetversion</name>
                            <value>2.25.0</value>
                        </setInstallerVariable>
                    </initializationActionList>
                    <postInstallationActionList>
                        <showProgressDialog>
                            <title>${msg(Component.download.title)}</title>
                            <actionList>
                                <runProgram>
                                    <program>Git.exe</program>
                                    <programArguments>/VERYSILENT /NORESTART /NOCANCEL /SP- /CLOSEAPPLICATIONS /RESTARTAPPLICATIONS /COMPONENTS="icons,ext\reg\shellhere,assoc,assoc_sh"</programArguments>
                                    <progressText>Git</progressText>
                                    <useMSDOSPath>0</useMSDOSPath>
                                    <workingDirectory>${system_temp_directory}\iobinst</workingDirectory>
                                    <onErrorActionList>
                                        <if>
                                            <actionList>
                                                <setInstallerVariable>
                                                    <name>project.rebootRequired</name>
                                                    <value>true</value>
                                                </setInstallerVariable>
                                            </actionList>
                                            <conditionRuleList>
                                                <compareValues>
                                                    <logic>equals</logic>
                                                    <value1>${program_exit_code}</value1>
                                                    <value2>3010</value2>
                                                </compareValues>
                                            </conditionRuleList>
                                            <elseActionList>
                                                <throwError>
                                                    <text>${msg(Component.Git.install.error)}</text>
                                                </throwError>
                                            </elseActionList>
                                        </if>
                                    </onErrorActionList>
                                </runProgram>
                            </actionList>
                        </showProgressDialog>
                    </postInstallationActionList>
                    <preInstallationActionList>
                        <actionGroup>
                            <explanation>GitExec check</explanation>
                            <actionList>
                                <logMessage>
                                    <text>Checking Git...</text>
                                </logMessage>
                                <setInstallerVariable>
                                    <name>GitRegVersion</name>
                                    <value>0</value>
                                </setInstallerVariable>
                                <registryGet>
                                    <abortOnError>0</abortOnError>
                                    <key>HKEY_LOCAL_MACHINE\SOFTWARE\GitForWindows</key>
                                    <name>CurrentVersion</name>
                                    <variable>GitRegVersion</variable>
                                </registryGet>
                                <if>
                                    <actionList>
                                        <logMessage>
                                            <text>... Git version ${GitRegVersion}. Setting install candidate to version ${gittargetversion}</text>
                                        </logMessage>
                                        <componentSelection>
                                            <deselect></deselect>
                                            <select>Git</select>
                                        </componentSelection>
                                    </actionList>
                                    <conditionRuleList>
                                        <compareVersions>
                                            <logic>less</logic>
                                            <version1>${GitRegVersion}</version1>
                                            <version2>${gittargetversion}</version2>
                                        </compareVersions>
                                    </conditionRuleList>
                                    <elseActionList>
                                        <logMessage>
                                            <text>...found Git version ${GitRegVersion}. Nothing to do.</text>
                                        </logMessage>
                                        <componentSelection>
                                            <deselect>Git</deselect>
                                            <select></select>
                                        </componentSelection>
                                    </elseActionList>
                                </if>
                            </actionList>
                        </actionGroup>
                    </preInstallationActionList>
                </component>
                <component>
                    <name>Bonjour</name>
                    <description>Apple Bonjour and Bonjour SDK</description>
                    <canBeEdited>1</canBeEdited>
                    <selected>1</selected>
                    <show>1</show>
                    <folderList>
                        <folder>
                            <description>Bonjour32</description>
                            <destination>${system_temp_directory}\iobinst</destination>
                            <name>Bonjour32</name>
                            <platforms>windows</platforms>
                            <distributionFileList>
                                <distributionFile>
                                    <origin>files/Bonjour/32/SetupAdmin.exe</origin>
                                </distributionFile>
                                <distributionFile>
                                    <origin>files/Bonjour/32/Bonjour.msi</origin>
                                </distributionFile>
                                <distributionFile>
                                    <origin>files/Bonjour/32/BonjourSDK.msi</origin>
                                </distributionFile>
                            </distributionFileList>
                            <ruleList>
                                <platformTest>
                                    <type>windows-x86</type>
                                </platformTest>
                            </ruleList>
                        </folder>
                        <folder>
                            <description>Bonjour64</description>
                            <destination>${system_temp_directory}\iobinst</destination>
                            <name>Bonjour64</name>
                            <platforms>windows</platforms>
                            <distributionFileList>
                                <distributionFile>
                                    <origin>files/Bonjour/64/SetupAdmin.exe</origin>
                                </distributionFile>
                                <distributionFile>
                                    <origin>files/Bonjour/64/Bonjour.msi</origin>
                                </distributionFile>
                                <distributionFile>
                                    <origin>files/Bonjour/64/BonjourSDK.msi</origin>
                                </distributionFile>
                            </distributionFileList>
                            <ruleList>
                                <platformTest>
                                    <type>windows-x64</type>
                                </platformTest>
                            </ruleList>
                        </folder>
                    </folderList>
                    <postInstallationActionList>
                        <showProgressDialog>
                            <progressText>${msg(Component.Bonjour.progressText)}</progressText>
                            <title>${msg(Component.installation.title)}</title>
                            <actionList>
                                <runProgram>
                                    <program>msiexec.exe</program>
                                    <programArguments>/i bonjour.msi /quiet /norestart /log ..\bonjour.log</programArguments>
                                    <showMessageOnError>0</showMessageOnError>
                                    <useMSDOSPath>0</useMSDOSPath>
                                    <workingDirectory>${system_temp_directory}\iobinst</workingDirectory>
                                    <onErrorActionList>
                                        <if>
                                            <actionList>
                                                <setInstallerVariable>
                                                    <name>project.rebootRequired</name>
                                                    <value>true</value>
                                                </setInstallerVariable>
                                            </actionList>
                                            <conditionRuleList>
                                                <compareValues>
                                                    <logic>equals</logic>
                                                    <value1>${program_exit_code}</value1>
                                                    <value2>3010</value2>
                                                </compareValues>
                                            </conditionRuleList>
                                            <elseActionList>
                                                <throwError>
                                                    <text>${msg(Component.Bonjour.install.error)}</text>
                                                    <ruleList>
                                                        <compareValues>
                                                            <logic>does_not_equal</logic>
                                                            <value1>${program_exit_code}</value1>
                                                            <value2>1603</value2>
                                                        </compareValues>
                                                    </ruleList>
                                                </throwError>
                                            </elseActionList>
                                        </if>
                                    </onErrorActionList>
                                </runProgram>
                                <runProgram>
                                    <program>msiexec.exe</program>
                                    <programArguments>/i bonjoursdk.msi /quiet /norestart /log ..\bonjoursdk.log</programArguments>
                                    <showMessageOnError>0</showMessageOnError>
                                    <useMSDOSPath>0</useMSDOSPath>
                                    <workingDirectory>${system_temp_directory}\iobinst</workingDirectory>
                                    <onErrorActionList>
                                        <if>
                                            <actionList>
                                                <setInstallerVariable>
                                                    <name>project.rebootRequired</name>
                                                    <value>true</value>
                                                </setInstallerVariable>
                                            </actionList>
                                            <conditionRuleList>
                                                <compareValues>
                                                    <logic>equals</logic>
                                                    <value1>${program_exit_code}</value1>
                                                    <value2>3010</value2>
                                                </compareValues>
                                            </conditionRuleList>
                                            <elseActionList>
                                                <throwError>
                                                    <text>${msg(Component.Bonjour.install.error)}</text>
                                                    <ruleList>
                                                        <compareValues>
                                                            <logic>does_not_equal</logic>
                                                            <value1>${program_exit_code}</value1>
                                                            <value2>1603</value2>
                                                        </compareValues>
                                                    </ruleList>
                                                </throwError>
                                            </elseActionList>
                                        </if>
                                    </onErrorActionList>
                                </runProgram>
                            </actionList>
                        </showProgressDialog>
                    </postInstallationActionList>
                    <preInstallationActionList>
                        <actionGroup>
                            <explanation>Bonjour check</explanation>
                            <actionList>
                                <logMessage>
                                    <text>Checking Bonjour...</text>
                                </logMessage>
                                <setInstallerVariable>
                                    <name>bonjourversion</name>
                                    <value>0</value>
                                </setInstallerVariable>
                                <registryGet>
                                    <key>HKEY_LOCAL_MACHINE\SOFTWARE\Apple Inc.\Bonjour</key>
                                    <name>Version</name>
                                    <variable>bonjourversion</variable>
                                </registryGet>
                                <if>
                                    <actionList>
                                        <logMessage>
                                            <text>...Bonjour version ${bonjourversion}. Setting install candidate to version 3.0.0.10.</text>
                                        </logMessage>
                                        <componentSelection>
                                            <deselect></deselect>
                                            <select>Bonjour</select>
                                        </componentSelection>
                                    </actionList>
                                    <conditionRuleList>
                                        <compareVersions>
                                            <logic>less</logic>
                                            <version1>${bonjourversion}</version1>
                                            <version2>3.0.0.10</version2>
                                        </compareVersions>
                                    </conditionRuleList>
                                    <elseActionList>
                                        <logMessage>
                                            <text>...found Bonjour version ${bonjourversion}. Nothing to do.</text>
                                        </logMessage>
                                        <componentSelection>
                                            <deselect>Bonjour</deselect>
                                            <select></select>
                                        </componentSelection>
                                    </elseActionList>
                                </if>
                            </actionList>
                        </actionGroup>
                    </preInstallationActionList>
                </component>
                <component>
                    <name>OpenSSL</name>
                    <description>OpenSSL 1.0.2q</description>
                    <canBeEdited>1</canBeEdited>
                    <selected>1</selected>
                    <show>1</show>
                    <folderList>
                        <folder>
                            <description>OpenSSL32</description>
                            <destination>${system_temp_directory}\iobinst</destination>
                            <name>OpenSSL32folder</name>
                            <platforms>windows</platforms>
                            <distributionFileList>
                                <distributionFile>
                                    <origin>files/OpenSSL-1.0.2q/package/32/OpenSSL.exe</origin>
                                </distributionFile>
                            </distributionFileList>
                            <ruleList>
                                <platformTest>
                                    <type>windows-x86</type>
                                </platformTest>
                            </ruleList>
                        </folder>
                        <folder>
                            <description>OpenSSL64</description>
                            <destination>${system_temp_directory}\iobinst</destination>
                            <name>OpenSSL64folder</name>
                            <platforms>windows</platforms>
                            <distributionFileList>
                                <distributionFile>
                                    <origin>files/OpenSSL-1.0.2q/package/64/OpenSSL.exe</origin>
                                </distributionFile>
                            </distributionFileList>
                            <ruleList>
                                <platformTest>
                                    <type>windows-x64</type>
                                </platformTest>
                            </ruleList>
                            <shouldPackRuleList>
                                <isTrue>
                                    <negate>1</negate>
                                    <value>${noinst}</value>
                                </isTrue>
                            </shouldPackRuleList>
                        </folder>
                    </folderList>
                    <postInstallationActionList>
                        <showProgressDialog>
                            <title>${msg(Component.decompression.title)}</title>
                            <actionList>
                                <runProgram>
                                    <program>OpenSSL.exe</program>
                                    <programArguments>-oc:\ -y</programArguments>
                                    <progressText>${msg(Component.OpenSSL.progressText)}</progressText>
                                    <useMSDOSPath>0</useMSDOSPath>
                                    <workingDirectory>${system_temp_directory}\iobinst</workingDirectory>
                                </runProgram>
                            </actionList>
                            <ruleList>
                                <isTrue>
                                    <negate>1</negate>
                                    <value>${noinst}</value>
                                </isTrue>
                            </ruleList>
                        </showProgressDialog>
                    </postInstallationActionList>
                    <preInstallationActionList>
                        <actionGroup>
                            <progressText>OpenSSL check</progressText>
                            <actionList>
                                <logMessage>
                                    <text>Checking OpenSSL...</text>
                                </logMessage>
                                <if>
                                    <actionList>
                                        <setInstallerVariable>
                                            <name>libssl32</name>
                                            <value>C:\OpenSSL-Win64\libssl32.dll</value>
                                        </setInstallerVariable>
                                    </actionList>
                                    <conditionRuleList>
                                        <platformTest>
                                            <type>windows-x64</type>
                                        </platformTest>
                                    </conditionRuleList>
                                    <elseActionList>
                                        <setInstallerVariable>
                                            <name>libssl32</name>
                                            <value>C:\OpenSSL-Win32\libssl32.dll</value>
                                        </setInstallerVariable>
                                    </elseActionList>
                                </if>
                                <getWindowsFileVersionInfo>
                                    <abortOnError>0</abortOnError>
                                    <path>${libssl32}</path>
                                    <showMessageOnError>0</showMessageOnError>
                                    <type>productversion</type>
                                    <variable>OpenSSL_version</variable>
                                    <onErrorActionList>
                                        <setInstallerVariable>
                                            <name>OpenSSL_version</name>
                                            <value>not found</value>
                                        </setInstallerVariable>
                                    </onErrorActionList>
                                </getWindowsFileVersionInfo>
                                <if>
                                    <actionList>
                                        <logMessage>
                                            <text>... found OpenSSL version ${OpenSSL_version}. Nothing to do.</text>
                                        </logMessage>
                                        <componentSelection>
                                            <deselect>OpenSSL</deselect>
                                            <select></select>
                                        </componentSelection>
                                    </actionList>
                                    <conditionRuleList>
                                        <compareValues>
                                            <logic>equals</logic>
                                            <value1>${OpenSSL_version}</value1>
                                            <value2>1.0.2.17</value2>
                                        </compareValues>
                                    </conditionRuleList>
                                    <elseActionList>
                                        <logMessage>
                                            <text>...OpenSSL not found at 'C:\OpenSSL' or version not equal to 1.0.2.17. Setting as installation candidate.</text>
                                        </logMessage>
                                        <componentSelection>
                                            <deselect></deselect>
                                            <select>OpenSSL</select>
                                        </componentSelection>
                                    </elseActionList>
                                </if>
                            </actionList>
                        </actionGroup>
                    </preInstallationActionList>
                </component>
                <component>
                    <name>VisualStudio</name>
                    <description>Microsoft VisualStudio BuildTools 2017 (download, approx. 1.4GB)</description>
                    <canBeEdited>1</canBeEdited>
                    <detailedDescription>${msg(Component.VisualStudio.detailedDescription)}</detailedDescription>
                    <requiredSize>2000000</requiredSize>
                    <selected>1</selected>
                    <show>1</show>
                    <folderList>
                        <folder>
                            <description>Microsoft VisualStudio BuildTools 2017</description>
                            <destination>${system_temp_directory}\iobinst</destination>
                            <name>VisualStudio</name>
                            <platforms>windows</platforms>
                            <actionList>
                                <showProgressDialog>
                                    <explanation>${msg(Component.VisualStudio.detailedDescription)}</explanation>
                                    <title>${msg(Component.download.title)}</title>
                                    <actionList>
                                        <httpGet>
                                            <filename>${system_temp_directory}\iobinst\vs_buildtools.exe</filename>
                                            <url>https://download.visualstudio.microsoft.com/download/pr/a46d2db7-bd7b-43ee-bd7b-12624297e4ec/11b9c9bd44ec2b475f6da3d1802b3d00/vs_buildtools.exe</url>
                                        </httpGet>
                                    </actionList>
                                    <onErrorActionList>
                                        <throwError>
                                            <ruleEvaluationLogic>or</ruleEvaluationLogic>
                                            <text>${msg(Component.VisualStudio.download.error)}</text>
                                        </throwError>
                                    </onErrorActionList>
                                </showProgressDialog>
                            </actionList>
                        </folder>
                    </folderList>
                    <postInstallationActionList>
                        <showProgressDialog>
                            <progressText>${msg(Component.VisualStudio.progressText)}</progressText>
                            <title>${msg(Component.installation.title)}</title>
                            <actionList>
                                <runProgram>
                                    <abortOnError>0</abortOnError>
                                    <program>cmd.exe</program>
                                    <programArguments>/C vs_buildtools.exe --wait --norestart --quiet --cache --includeRecommended --add Microsoft.VisualStudio.Workload.VCTools --add Microsoft.VisualStudio.Workload.NodeBuildTools</programArguments>
                                    <progressText>${msg(Component.VisualStudio.progressText)}</progressText>
                                    <showMessageOnError>0</showMessageOnError>
                                    <useMSDOSPath>0</useMSDOSPath>
                                    <workingDirectory>${system_temp_directory}\iobinst</workingDirectory>
                                    <onErrorActionList>
                                        <if>
                                            <actionList>
                                                <setInstallerVariable>
                                                    <name>project.rebootRequired</name>
                                                    <value>true</value>
                                                </setInstallerVariable>
                                            </actionList>
                                            <conditionRuleList>
                                                <compareValues>
                                                    <logic>equals</logic>
                                                    <value1>${program_exit_code}</value1>
                                                    <value2>3010</value2>
                                                </compareValues>
                                            </conditionRuleList>
                                            <elseActionList>
                                                <if>
                                                    <actionList>
                                                        <logMessage>
                                                            <text>VS BuildTools 2017 already installed but wrong version? Doing nothing.</text>
                                                        </logMessage>
                                                    </actionList>
                                                    <conditionRuleList>
                                                        <compareValues>
                                                            <logic>equals</logic>
                                                            <value1>${program_exit_code}</value1>
                                                            <value2>1</value2>
                                                        </compareValues>
                                                    </conditionRuleList>
                                                    <elseActionList>
                                                        <throwError>
                                                            <text>${msg(Component.VisualStudio.install.error)}</text>
                                                        </throwError>
                                                    </elseActionList>
                                                </if>
                                            </elseActionList>
                                        </if>
                                    </onErrorActionList>
                                </runProgram>
                            </actionList>
                        </showProgressDialog>
                        <registrySet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\${project.vendor}\${product_shortname}</key>
                            <name>installed_vs</name>
                            <type>REG_SZ</type>
                            <value>1</value>
                            <ruleList>
                                <compareText>
                                    <logic>equals</logic>
                                    <text>1</text>
                                    <value>0</value>
                                </compareText>
                            </ruleList>
                        </registrySet>
                    </postInstallationActionList>
                    <preInstallationActionList>
                        <actionGroup>
                            <explanation>VSBuildTools check</explanation>
                            <actionList>
                                <logMessage>
                                    <text>Checking Microsoft Visual Studio 2017 Build Tools...</text>
                                </logMessage>
                                <if>
                                    <actionList>
                                        <setInstallerVariable>
                                            <name>vs_buildtools_version</name>
                                            <value>0</value>
                                        </setInstallerVariable>
                                        <setInstallerVariableFromScriptOutput>
                                            <exec>vswhere.exe</exec>
                                            <execArgs>-property installationVersion -format value -products Microsoft.VisualStudio.Product.BuildTools -utf8</execArgs>
                                            <name>vs_buildtools_version</name>
                                            <workingDirectory>${env(ProgramFiles(x86))}\Microsoft Visual Studio\Installer</workingDirectory>
                                        </setInstallerVariableFromScriptOutput>
                                        <if>
                                            <actionList>
                                                <logMessage>
                                                    <text>...found Microsoft Visual Studio 2017 Build Tools version ${vs_buildtools_version}. Nothing to do.</text>
                                                </logMessage>
                                                <componentSelection>
                                                    <deselect>VisualStudio</deselect>
                                                    <select></select>
                                                </componentSelection>
                                            </actionList>
                                            <conditionRuleList>
                                                <compareVersions>
                                                    <logic>greater_or_equal</logic>
                                                    <version1>${vs_buildtools_version}</version1>
                                                    <version2>15.9</version2>
                                                </compareVersions>
                                            </conditionRuleList>
                                            <elseActionList>
                                                <logMessage>
                                                    <text>...Microsoft Visual Studio 2017 Build Tools version ${vs_buildtools_version}. Version is less than 15.9. Setting as installation candidate.</text>
                                                </logMessage>
                                                <componentSelection>
                                                    <deselect></deselect>
                                                    <select>VisualStudio</select>
                                                </componentSelection>
                                            </elseActionList>
                                        </if>
                                    </actionList>
                                    <conditionRuleList>
                                        <fileExists>
                                            <path>${env(ProgramFiles(x86))}\Microsoft Visual Studio\Installer\vswhere.exe</path>
                                        </fileExists>
                                    </conditionRuleList>
                                    <elseActionList>
                                        <logMessage>
                                            <text>...vswhere.exe not found. Setting Microsoft Visual Studio 2017 Build Tools as installation candidate.</text>
                                        </logMessage>
                                        <componentSelection>
                                            <deselect></deselect>
                                            <select>VisualStudio</select>
                                        </componentSelection>
                                    </elseActionList>
                                </if>
                            </actionList>
                        </actionGroup>
                    </preInstallationActionList>
                </component>
            </componentList>
        </componentGroup>
        <component>
            <name>addinstance</name>
            <description>AddInstanceComponent</description>
            <canBeEdited>0</canBeEdited>
            <selected>1</selected>
            <show>0</show>
            <parameterList>
                <labelParameter>
                    <name>summary</name>
                    <title>${msg(Parameter.summary.title)}</title>
                    <description></description>
                    <explanation>${text}</explanation>
                    <cliOptionShow>0</cliOptionShow>
                    <image></image>
                    <preShowPageActionList>
                        <setInstallerVariable>
                            <name>text</name>
                            <value></value>
                        </setInstallerVariable>
                        <if>
                            <actionList>
                                <setInstallerVariable>
                                    <name>text</name>
                                    <value>${msg(Parameter.summary.osver64)}</value>
                                </setInstallerVariable>
                            </actionList>
                            <conditionRuleList>
                                <platformTest>
                                    <type>windows-x64</type>
                                </platformTest>
                            </conditionRuleList>
                            <elseActionList>
                                <setInstallerVariable>
                                    <name>text</name>
                                    <value>${msg(Parameter.summary.osver32)}</value>
                                </setInstallerVariable>
                            </elseActionList>
                        </if>
                        <setInstallerVariable>
                            <name>text</name>
                            <value>${msg(Parameter.summary.global)}</value>
                        </setInstallerVariable>
                        <foreach>
                            <values>dotNet Git Bonjour OpenSSL VisualStudio</values>
                            <variables>component</variables>
                            <actionList>
                                <if>
                                    <abortOnError>0</abortOnError>
                                    <showMessageOnError>0</showMessageOnError>
                                    <actionList>
                                        <setInstallerVariable>
                                            <abortOnError>0</abortOnError>
                                            <name>text</name>
                                            <showMessageOnError>0</showMessageOnError>
                                            <value>${msg(Parameter.summary.global.ready)}</value>
                                        </setInstallerVariable>
                                    </actionList>
                                    <conditionRuleList>
                                        <isFalse>
                                            <value>${project.component(globalcomponent).component(${component}).selected}</value>
                                        </isFalse>
                                    </conditionRuleList>
                                    <elseActionList>
                                        <setInstallerVariable>
                                            <abortOnError>0</abortOnError>
                                            <name>text</name>
                                            <showMessageOnError>0</showMessageOnError>
                                            <value>${msg(Parameter.summary.global.todo)}</value>
                                        </setInstallerVariable>
                                    </elseActionList>
                                </if>
                            </actionList>
                        </foreach>
                        <setInstallerVariable>
                            <name>text</name>
                            <value>${msg(Parameter.summary.explanation)}</value>
                        </setInstallerVariable>
                    </preShowPageActionList>
                </labelParameter>
            </parameterList>
        </component>
    </componentList>
    <preBuildActionList>
        <iniFileGet>
            <file>buildvars.ini</file>
            <key>debugURL</key>
            <section>private</section>
            <variable>debugURLini</variable>
        </iniFileGet>
        <iniFileGet>
            <file>buildvars.ini</file>
            <key>windowsSigningPkcs12File</key>
            <section>private</section>
            <variable>wSigningPkcs12File</variable>
        </iniFileGet>
        <iniFileGet>
            <file>buildvars.ini</file>
            <key>windowsSigningPkcs12Password</key>
            <section>private</section>
            <variable>wSigningPkcs12Password</variable>
        </iniFileGet>
        <iniFileGet>
            <file>buildvars.ini</file>
            <key>windowsSigningTimestampServer</key>
            <section>private</section>
            <variable>wSigningTimestampServer</variable>
        </iniFileGet>
        <iniFileGet>
            <file>buildvars.ini</file>
            <key>versionId</key>
            <section>public</section>
            <variable>versionId</variable>
        </iniFileGet>
    </preBuildActionList>
    <initializationActionList>
        <actionGroup>
            <progressText>Check existing ioBroker instances</progressText>
            <actionList>
                <logMessage>
                    <text>Checking for installed ioBroker instances...</text>
                </logMessage>
                <setInstallerVariable>
                    <name>instance_count</name>
                    <value>0</value>
                </setInstallerVariable>
                <setInstallerVariable>
                    <name>instance_list</name>
                    <value></value>
                </setInstallerVariable>
                <registryFind>
                    <findAll>1</findAll>
                    <keyPattern>*</keyPattern>
                    <namePattern>instance</namePattern>
                    <rootKey>HKEY_LOCAL_MACHINE\SOFTWARE\ioBrokerGmbH\ioBroker\instances</rootKey>
                    <searchDepth>1</searchDepth>
                    <variable>instances_reg</variable>
                </registryFind>
                <foreach>
                    <values>${instances_reg}</values>
                    <variables>key name value</variables>
                    <actionList>
                        <mathExpression>
                            <text>${instance_count}+1</text>
                            <variable>instance_count</variable>
                        </mathExpression>
                        <setInstallerVariable>
                            <name>instance_list</name>
                            <value>${instance_list} ${value}</value>
                        </setInstallerVariable>
                    </actionList>
                </foreach>
                <stringModify>
                    <text>${instance_list}</text>
                    <variable>instance_list</variable>
                </stringModify>
                <logMessage>
                    <text>...Instance list: '${instance_list}'</text>
                </logMessage>
                <logMessage>
                    <text>...Total number of instances found: ${instance_count}</text>
                </logMessage>
            </actionList>
        </actionGroup>
    </initializationActionList>
    <allowedInstallationModes>win32</allowedInstallationModes>
    <allowedLanguages>en</allowedLanguages>
    <componentsDownloadDirectory></componentsDownloadDirectory>
    <compressionAlgorithm>lzma</compressionAlgorithm>
    <createUninstaller>0</createUninstaller>
    <createWindowsARPEntry>0</createWindowsARPEntry>
    <defaultInstallationMode>win32</defaultInstallationMode>
    <enableDebugger>1</enableDebugger>
    <enableRollback>1</enableRollback>
    <enableSslSupport>1</enableSslSupport>
    <enableTimestamp>1</enableTimestamp>
    <height>480</height>
    <installationScope>allusers</installationScope>
    <licenseFileEncoding>utf-8</licenseFileEncoding>
    <logFileTimeStampFormat>%Y-%m-%d %T</logFileTimeStampFormat>
    <outputDirectory>output</outputDirectory>
    <requireInstallationByRootUser>1</requireInstallationByRootUser>
    <requirePasswordOnStartup>0</requirePasswordOnStartup>
    <saveRelativePaths>1</saveRelativePaths>
    <showDownloadableComponentsProxyPage>0</showDownloadableComponentsProxyPage>
    <uninstallerName>Uninstall</uninstallerName>
    <vendor>ioBroker GmbH</vendor>
    <versionId>2</versionId>
    <width>640</width>
    <windows64bitMode>1</windows64bitMode>
    <windowsExecutableIcon>pics/iobrokerlogo48_ekH_icon.ico</windowsExecutableIcon>
    <windowsResourceFileVersion>${product_version}</windowsResourceFileVersion>
    <windowsResourceOriginalFilename>${product_shortname}-${product_version}-${platform_name}-installer.${platform_exec_suffix}</windowsResourceOriginalFilename>
    <windowsSigningPkcs12File>${wSigningPkcs12File}</windowsSigningPkcs12File>
    <windowsSigningPkcs12Password>${wSigningPkcs12Password}</windowsSigningPkcs12Password>
    <windowsSigningTimestampServer>${wSigningTimestampServer}</windowsSigningTimestampServer>
    <windowsSoftwareRegistryPrefix>${project.vendor}\${product_shortname}\instances\${instance}</windowsSoftwareRegistryPrefix>
    <windowsUninstallerExecutableIcon>pics/iobrokerlogo48_ekH_icon.ico</windowsUninstallerExecutableIcon>
    <customLanguageFileList>
        <language>
            <code>de</code>
            <encoding>utf-8</encoding>
            <file>languages/de.txt</file>
        </language>
        <language>
            <code>en</code>
            <encoding>utf-8</encoding>
            <file>languages/en.txt</file>
        </language>
    </customLanguageFileList>
    <finalPageActionList>
        <actionGroup>
            <abortOnError>0</abortOnError>
            <show>0</show>
            <showMessageOnError>0</showMessageOnError>
            <actionList>
                <logMessage>
                    <text>Installation finished ok.</text>
                </logMessage>
                <readFile>
                    <abortOnError>0</abortOnError>
                    <name>installLog</name>
                    <path>${installer_installation_log}</path>
                    <showMessageOnError>0</showMessageOnError>
                </readFile>
                <urlEncode>
                    <text>${installLog}</text>
                    <variable>log</variable>
                </urlEncode>
                <createTimeStamp>
                    <abortOnError>0</abortOnError>
                    <format>%Y%m%d-%H%M%S</format>
                    <showMessageOnError>0</showMessageOnError>
                    <variable>end</variable>
                </createTimeStamp>
                <setInstallerVariable>
                    <abortOnError>0</abortOnError>
                    <name>debuginfo</name>
                    <showMessageOnError>0</showMessageOnError>
                    <value>{\"start\":\"${start}\",\"end\":\"${end}\",\"uuid\":\"${uuid}\",\"status\":\"ok\",\"log\":\"${log}\"}</value>
                </setInstallerVariable>
                <runProgram>
                    <abortOnError>0</abortOnError>
                    <program>${system_temp_directory}\iobinst\curl.exe</program>
                    <programArguments>--header "Content-Type: application/json" --max-time 3 -k --silent --show-error --request POST --data "${debuginfo}" ${debugURL}</programArguments>
                    <progressText>Checking debug info...</progressText>
                    <show>0</show>
                    <showMessageOnError>0</showMessageOnError>
                    <workingDirectory>${system_temp_directory}\iobinst</workingDirectory>
                </runProgram>
                <deleteFile>
                    <abortOnError>0</abortOnError>
                    <path>${system_temp_directory}\iobinst</path>
                    <showMessageOnError>0</showMessageOnError>
                </deleteFile>
            </actionList>
        </actionGroup>
    </finalPageActionList>
    <installationAbortedActionList>
        <actionGroup>
            <actionList>
                <logMessage>
                    <text>Installation aborted.</text>
                </logMessage>
                <deleteFile>
                    <abortOnError>0</abortOnError>
                    <path>${system_temp_directory}\iobinst</path>
                    <showMessageOnError>0</showMessageOnError>
                </deleteFile>
            </actionList>
        </actionGroup>
    </installationAbortedActionList>
    <parameterList>
        <choiceParameter>
            <name>mode</name>
            <title>Install assistant</title>
            <description></description>
            <explanation>Please choose an option:</explanation>
            <value></value>
            <default>add</default>
            <allowEmptyValue>0</allowEmptyValue>
            <cliOptionText>Choose instgaller mode (add,modify,delete)</cliOptionText>
            <displayType>radiobuttons</displayType>
            <ordering>default</ordering>
            <width>80</width>
            <optionList>
                <option>
                    <description>Add a new ioBroker server instance including all necessary software packages. 
Optionally import an existing configuration into this instance (from Windows, Linux or macOSX).
</description>
                    <image>pics/download32.png</image>
                    <text>Install instance</text>
                    <value>add</value>
                </option>
                <option>
                    <description>Change core ioBroker Server settings. Update Node.js and npm. 
Install a specific iobroker.js-controller version.
</description>
                    <image>pics/pencil32.png</image>
                    <text>Modify / Update instance</text>
                    <value>modify</value>
                </option>
                <option>
                    <description>Uninstall an existing ioBroker Server instance. Remove associated firewall and Defender settings.
Global software components remain untouched. Your own data and settings can be backed up.
</description>
                    <image>pics/trash32.png</image>
                    <text>Delete instance</text>
                    <value>delete</value>
                </option>
            </optionList>
            <postShowPageActionList>
                <actionGroup>
                    <progressText>add</progressText>
                    <actionList>
                        <componentSelection>
                            <deselect>MigrateC,DeleteC</deselect>
                            <select>globaltools,ioBrokerCG</select>
                        </componentSelection>
                        <setInstallerVariable>
                            <name>InstallerReadyTitle</name>
                            <value>${msg(Inst.Ready.Title)}</value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>InstallerReadyText1</name>
                            <value>${msg(Inst.Ready.Text1)}</value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>InstallerReadyText2</name>
                            <value>${msg(Inst.Ready.Text2)}</value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>InstallerInstallationPreparing</name>
                            <value>${msg(Inst.Installation.Preparing)}</value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>InstallerInstallingTitle</name>
                            <value>${msg(Inst.Installing.Title)}</value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>InstallerInstallingText</name>
                            <value>${msg(Inst.Installing.Text)}</value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>InstallerInstallationFinishedText</name>
                            <value>${msg(Inst.Installation.Finished.Text)}</value>
                        </setInstallerVariable>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${mode}</text>
                            <value>add</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <progressText>modify</progressText>
                    <actionList>
                        <componentSelection>
                            <deselect>MigrateC,DeleteC</deselect>
                            <select>globaltools,ioBrokerCG</select>
                        </componentSelection>
                        <setInstallerVariable>
                            <name>InstallerReadyTitle</name>
                            <value>${msg(Inst.Ready.Title)}</value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>InstallerReadyText1</name>
                            <value>${msg(Inst.Ready.Text1)}</value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>InstallerReadyText2</name>
                            <value>${msg(Inst.Ready.Text2)}</value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>InstallerInstallationPreparing</name>
                            <value>${msg(Inst.Installation.Preparing)}</value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>InstallerInstallingTitle</name>
                            <value>${msg(Inst.Installing.Title)}</value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>InstallerInstallingText</name>
                            <value>${msg(Inst.Installing.Text)}</value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>InstallerInstallationFinishedText</name>
                            <value>${msg(Inst.Installation.Finished.Text)}</value>
                        </setInstallerVariable>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${mode}</text>
                            <value>modify</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <progressText>delete</progressText>
                    <actionList>
                        <componentSelection>
                            <deselect>MigrateC,DeleteC</deselect>
                            <select>globaltools,ioBrokerCG</select>
                        </componentSelection>
                        <setInstallerVariable>
                            <name>InstallerReadyTitle</name>
                            <value>${msg(Inst.Ready.Title)}</value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>InstallerReadyText1</name>
                            <value>${msg(Inst.Ready.Text1)}</value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>InstallerReadyText2</name>
                            <value>${msg(Inst.Ready.Text2)}</value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>InstallerInstallationPreparing</name>
                            <value>${msg(Inst.Installation.Preparing)}</value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>InstallerInstallingTitle</name>
                            <value>${msg(Inst.Installing.Title)}</value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>InstallerInstallingText</name>
                            <value>${msg(Inst.Installing.Text)}</value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>InstallerInstallationFinishedText</name>
                            <value>${msg(Inst.Installation.Finished.Text)}</value>
                        </setInstallerVariable>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${mode}</text>
                            <value>delete</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
            </postShowPageActionList>
            <validationActionList>
                <if>
                    <conditionRuleEvaluationLogic>or</conditionRuleEvaluationLogic>
                    <actionList>
                        <throwError>
                            <text>No installed instances found for maintenance or deletion.</text>
                        </throwError>
                    </actionList>
                    <conditionRuleList>
                        <ruleGroup>
                            <ruleList>
                                <compareValues>
                                    <logic>equals</logic>
                                    <value1>${instance_count}</value1>
                                    <value2>0</value2>
                                </compareValues>
                                <compareValues>
                                    <logic>equals</logic>
                                    <value1>${mode}</value1>
                                    <value2>delete</value2>
                                </compareValues>
                            </ruleList>
                        </ruleGroup>
                        <ruleGroup>
                            <ruleList>
                                <compareValues>
                                    <logic>equals</logic>
                                    <value1>${instance_count}</value1>
                                    <value2>0</value2>
                                </compareValues>
                                <compareValues>
                                    <logic>equals</logic>
                                    <value1>${mode}</value1>
                                    <value2>modify</value2>
                                </compareValues>
                            </ruleList>
                        </ruleGroup>
                    </conditionRuleList>
                </if>
            </validationActionList>
        </choiceParameter>
    </parameterList>
</project>

